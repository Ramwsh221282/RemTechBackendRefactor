version: "3.8"

services:
  database:
    image: pgvector/pgvector:0.8.0-pg17-bookworm
    restart: always
    container_name: database
    environment:
      POSTGRES_DB: ${PG_DATABASE_NAME}
      POSTGRES_USER: ${PG_USER_NAME}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      PGPORT: 5435
    ports:
      - "5535:5435"
    volumes:
      - remtech_data:/var/lib/postgresql/data

  seq:
    image: datalust/seq:latest
    container_name: seq
    restart: always
    environment:
      ACCEPT_EULA: "Y"
      SEQ_FIRSTRUN_ADMINUSERNAME: ${PG_USER_NAME}
      SEQ_FIRSTRUN_ADMINPASSWORD: ${PG_PASSWORD}
    ports:
      - "5341:5341"
      - "8081:80"
    volumes:
      - seq_data:/data

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_USER_NAME}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: DockerfileBackend
    ports:
      - "5185:5185"
      - "5238:5238"
    environment:
      - ASPNETCORE_URLS=http://+:5185
      - RABBIT_HOST_NAME=${RABBIT_HOST_NAME}
      - RABBIT_USER_NAME=${RABBIT_USER_NAME}
      - RABBIT_PASSWORD=${RABBIT_PASSWORD}
      - RABBIT_PORT=${RABBIT_PORT}
      - PG_HOST_NAME=${PG_HOST_NAME}
      - PG_PORT=${PG_PORT}
      - PG_DATABASE_NAME=${PG_DATABASE_NAME}
      - PG_USER_NAME=${PG_USER_NAME}
      - PG_PASSWORD=${PG_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - SEQ_HOST=${SEQ_HOST}
      - FRONTEND_URL=${FRONTEND_URL}
    depends_on:
      - database
      - redis
      - rabbitmq
      - seq
    restart: always

  avito-vehicles:
    container_name: avito-vehicles
    build:
      context: .
      dockerfile: DockerfileAvitoVehicles
    environment:
      - RABBIT_HOST_NAME=${RABBIT_HOST_NAME}
      - RABBIT_USER_NAME=${RABBIT_USER_NAME}
      - RABBIT_PASSWORD=${RABBIT_PASSWORD}
      - RABBIT_PORT=${RABBIT_PORT}
      - PG_HOST_NAME=${PG_HOST_NAME}
      - PG_PORT=${PG_PORT}
      - PG_DATABASE_NAME=${PG_DATABASE_NAME}
      - PG_USER_NAME=${PG_USER_NAME}
      - PG_PASSWORD=${PG_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - SEQ_HOST=${SEQ_HOST}
      - FRONTEND_URL=${FRONTEND_URL}
      - MAIN_GRPC_ADDRESS=${MAIN_GRPC_ADDRESS}
    depends_on:
      - backend
      - database
      - redis
      - rabbitmq
      - seq
    restart: always

  drom-vehicles:
    container_name: drom-vehicles
    build:
      context: .
      dockerfile: DockerfileDromVehicles
    environment:
      - RABBIT_HOST_NAME=${RABBIT_HOST_NAME}
      - RABBIT_USER_NAME=${RABBIT_USER_NAME}
      - RABBIT_PASSWORD=${RABBIT_PASSWORD}
      - RABBIT_PORT=${RABBIT_PORT}
      - PG_HOST_NAME=${PG_HOST_NAME}
      - PG_PORT=${PG_PORT}
      - PG_DATABASE_NAME=${PG_DATABASE_NAME}
      - PG_USER_NAME=${PG_USER_NAME}
      - PG_PASSWORD=${PG_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - SEQ_HOST=${SEQ_HOST}
      - FRONTEND_URL=${FRONTEND_URL}
      - MAIN_GRPC_ADDRESS=${MAIN_GRPC_ADDRESS}
    depends_on:
      - backend
      - database
      - redis
      - rabbitmq
      - seq
    restart: always

  avito-spares:
    container_name: avito-spares
    build:
      context: .
      dockerfile: DockerfileAvitoSpares
    environment:
      - RABBIT_HOST_NAME=${RABBIT_HOST_NAME}
      - RABBIT_USER_NAME=${RABBIT_USER_NAME}
      - RABBIT_PASSWORD=${RABBIT_PASSWORD}
      - RABBIT_PORT=${RABBIT_PORT}
      - PG_HOST_NAME=${PG_HOST_NAME}
      - PG_PORT=${PG_PORT}
      - PG_DATABASE_NAME=${PG_DATABASE_NAME}
      - PG_USER_NAME=${PG_USER_NAME}
      - PG_PASSWORD=${PG_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - SEQ_HOST=${SEQ_HOST}
      - FRONTEND_URL=${FRONTEND_URL}
      - MAIN_GRPC_ADDRESS=${MAIN_GRPC_ADDRESS}
    depends_on:
      - backend
      - database
      - redis
      - rabbitmq
      - seq
    restart: always

  cleaner:
    container_name: cleaner
    build:
      context: .
      dockerfile: DockerfileCleaner
    environment:
      - RABBIT_HOST_NAME=${RABBIT_HOST_NAME}
      - RABBIT_USER_NAME=${RABBIT_USER_NAME}
      - RABBIT_PASSWORD=${RABBIT_PASSWORD}
      - RABBIT_PORT=${RABBIT_PORT}
      - PG_HOST_NAME=${PG_HOST_NAME}
      - PG_PORT=${PG_PORT}
      - PG_DATABASE_NAME=${PG_DATABASE_NAME}
      - PG_USER_NAME=${PG_USER_NAME}
      - PG_PASSWORD=${PG_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - SEQ_HOST=${SEQ_HOST}
      - FRONTEND_URL=${FRONTEND_URL}
    depends_on:
      - backend
      - database
      - redis
      - rabbitmq
      - seq
    restart: always

  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: DockerfileFrontend
    ports:
      - "80:80"
    environment:
      - DISABLE_IPV6=1
    depends_on:
      - backend
      - database
      - redis
      - rabbitmq
      - seq
    restart: always

volumes:
  remtech_data:
  seq_data:
